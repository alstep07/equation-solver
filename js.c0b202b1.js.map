{"version":3,"sources":["js/constants.js","js/utils/getNotValidInputIndexes.js","js/utils/split.js","js/resolveEquations.js","js/utils/safeBackspace.js","js/index.js"],"names":["MAX_EXPRESSIONS_COUNT","ERROR_DELAY_MS","EMOJIS","EMOJI_REG_EXP","validateInputValue","value","formattedValue","replace","regExp","test","inputValues","notValidInputsIndexes","forEach","index","push","string","arr","char","equations","emojiValues","total","Object","fromEntries","map","emoji","undefined","equation","split","expression","result","calculateExpression","expressionValues","console","log","minus","startsWith","slice","join","unknownValues","parseFloat","filter","uniqueEmojis","Set","match","size","multiplier","controls","document","getElementById","form","newExpressionButton","errorMessage","currentInput","resultContainer","addNewInput","newInput","createElement","setAttribute","classList","add","append","resetForm","innerHTML","removeAttribute","addEventListener","target","childElementCount","setFieldErrors","indexes","Array","from","children","input","includes","setTimeout","remove","showErrorMessage","id","contains","e","preventDefault","notValidInputIndexes","length","formattedValues","entries","resultItem"],"mappings":"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","file":"js.c0b202b1.js","sourceRoot":"..\\src","sourcesContent":["const MAX_EXPRESSIONS_COUNT = 6;\r\nconst ERROR_DELAY_MS = 3000;\r\nconst EMOJIS = ['🐴', '🐯', '🦁', '🦝', '🐗'];\r\nconst EMOJI_REG_EXP =\r\n  /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/gi;\r\n\r\nexport { MAX_EXPRESSIONS_COUNT, ERROR_DELAY_MS, EMOJIS, EMOJI_REG_EXP };\r\n","import { EMOJIS, EMOJI_REG_EXP } from '../constants';\r\n\r\nconst validateInputValue = (value) => {\r\n  const formattedValue = value.replace(EMOJI_REG_EXP, '0');\r\n  const regExp = /^\\-?[0-9]+(([-+/*][0-9]+)?([.,][0-9]+)?)*?=([0-9]+|\\?)$/;\r\n  return regExp.test(formattedValue);\r\n};\r\n\r\nexport default (inputValues) => {\r\n  const notValidInputsIndexes = [];\r\n\r\n  inputValues.forEach((value, index) => {\r\n    if (!validateInputValue(value)) {\r\n      notValidInputsIndexes.push(index);\r\n    }\r\n  });\r\n\r\n  return notValidInputsIndexes;\r\n};\r\n","export default (string) => {\r\n  const arr = [];\r\n  for (const char of string) arr.push(char);\r\n\r\n  return arr;\r\n};\r\n","import split from './utils/split';\r\nimport { EMOJIS, EMOJI_REG_EXP } from './constants';\r\n\r\nexport default (equations) => {\r\n  const emojiValues = Object.fromEntries(\r\n    EMOJIS.map((emoji) => [emoji, undefined])\r\n  );\r\n  let total;\r\n\r\n  equations.forEach((equation) => {\r\n    let [expression, result] = equation.split('=');\r\n\r\n    const calculateExpression = (expression) => {\r\n      console.log(expression);\r\n      const expressionValues = expression.replace(/-/gi, '+-').split('+');\r\n      return expressionValues.map((value) => {\r\n        let minus = '';\r\n        if (value.startsWith('-')) {\r\n          minus = '-';\r\n          value = value.slice(1);\r\n        }\r\n        if (emojiValues[value]) {\r\n          value = emojiValues[value];\r\n        }\r\n        console.log(value);\r\n        if (EMOJI_REG_EXP.test(value)) {\r\n          return split(value)\r\n            .map((char) => `${minus}${char}`)\r\n            .join('+');\r\n        }\r\n        return `${minus}${value}`;\r\n      });\r\n    };\r\n\r\n    const expressionValues = calculateExpression(expression);\r\n    const unknownValues = expressionValues\r\n      .map((value) => {\r\n        if (emojiValues[value]) {\r\n          value = emojiValues[value];\r\n        }\r\n        if (/^[0-9-]*$/.test(value) && result !== '?') {\r\n          result = parseFloat(result);\r\n          result -= parseFloat(value);\r\n          return null;\r\n        }\r\n        return value;\r\n      })\r\n      .filter((value) => !!value)\r\n      .join('+');\r\n\r\n    const uniqueEmojis = new Set(unknownValues.match(EMOJI_REG_EXP));\r\n    if (uniqueEmojis.size === 1) {\r\n      let multiplier = 0;\r\n      unknownValues.split('+').forEach((value) => {\r\n        if (value.startsWith('-')) {\r\n          multiplier--;\r\n        } else {\r\n          multiplier++;\r\n        }\r\n      });\r\n      emojiValues[[...uniqueEmojis][0]] = result / multiplier;\r\n    }\r\n\r\n    if (result === '?') {\r\n      total = calculateExpression(expression)[0];\r\n    }\r\n  });\r\n\r\n  return { total, emojiValues };\r\n};\r\n","import split from './split';\r\n\r\nexport default (string) => {\r\n  const arr = split(string);\r\n\r\n  return arr.slice(0, -1).join('');\r\n};\r\n","import { MAX_EXPRESSIONS_COUNT, ERROR_DELAY_MS } from './constants';\r\nimport getNotValidInputIndexes from './utils/getNotValidInputIndexes';\r\nimport resolveEquations from './resolveEquations';\r\nimport safeBackspace from './utils/safeBackspace';\r\n\r\nconst controls = document.getElementById('controls');\r\nconst form = document.getElementById('calculator-form');\r\nconst newExpressionButton = document.getElementById('new-expression');\r\nconst errorMessage = document.getElementById('error-message');\r\nlet currentInput = document.getElementById('initial-input');\r\nconst resultContainer = document.getElementById('result-container');\r\n\r\nconst addNewInput = () => {\r\n  const newInput = document.createElement('input');\r\n  newInput.setAttribute('readonly', true);\r\n  newInput.classList.add('input');\r\n  form.append(newInput);\r\n  currentInput = newInput;\r\n};\r\n\r\nconst resetForm = () => {\r\n  form.innerHTML = '';\r\n  newExpressionButton.removeAttribute('disabled');\r\n  addNewInput();\r\n};\r\n\r\nnewExpressionButton.addEventListener('click', ({ target }) => {\r\n  addNewInput();\r\n\r\n  if (form.childElementCount === MAX_EXPRESSIONS_COUNT) {\r\n    target.setAttribute('disabled', true);\r\n  }\r\n});\r\n\r\nconst setFieldErrors = (indexes) => {\r\n  Array.from(form.children).forEach((input, index) => {\r\n    if (indexes.includes(index)) {\r\n      input.classList.add('error');\r\n      setTimeout(() => {\r\n        input.classList.remove('error');\r\n      }, ERROR_DELAY_MS);\r\n    } else {\r\n      input.classList.remove('error');\r\n    }\r\n  });\r\n};\r\n\r\nconst showErrorMessage = () => {\r\n  errorMessage.innerHTML = 'Please enter valid expressions!';\r\n  setTimeout(() => {\r\n    errorMessage.innerHTML = '';\r\n  }, ERROR_DELAY_MS);\r\n};\r\n\r\ncontrols.addEventListener('click', ({ target }) => {\r\n  if (target.id === 'backspace') {\r\n    currentInput.value = safeBackspace(currentInput.value);\r\n  }\r\n\r\n  if (!target.classList.contains('calculator-button')) return;\r\n\r\n  currentInput.value += target.innerHTML;\r\n});\r\n\r\nform.addEventListener('click', ({ target }) => {\r\n  if (!target.classList.contains('input')) return;\r\n\r\n  currentInput = target;\r\n});\r\n\r\nform.addEventListener('reset', (e) => {\r\n  e.preventDefault();\r\n  resetForm();\r\n});\r\n\r\nform.addEventListener('submit', (e) => {\r\n  e.preventDefault();\r\n  const inputValues = Array.from(e.target.children).map(({ value }) => value);\r\n  const notValidInputIndexes = getNotValidInputIndexes(inputValues);\r\n  setFieldErrors(notValidInputIndexes);\r\n\r\n  if (notValidInputIndexes.length > 0) {\r\n    showErrorMessage();\r\n    return;\r\n  }\r\n  errorMessage.innerHTML = '';\r\n  const result = resolveEquations(inputValues);\r\n  const { total, emojiValues } = result;\r\n  const formattedValues = Object.entries(emojiValues).map(([emoji, value]) => {\r\n    const formattedValue = typeof value === 'number' ? value :'?';\r\n    return `${emoji} = ${formattedValue}`;\r\n  });\r\n  resultContainer.innerHTML = `Result: ${total}`;\r\n  formattedValues.forEach(value => {\r\n    const resultItem = document.createElement('p');\r\n    resultItem.innerHTML = value;\r\n    resultContainer.append(resultItem);\r\n  })\r\n});\r\n"]}