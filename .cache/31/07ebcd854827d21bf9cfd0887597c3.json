{"id":"js/utils/split.js","dependencies":[{"name":"C:\\Users\\sasha\\projects\\dev_challenge\\final\\package.json","includedInParent":true,"mtime":1639221305860}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar _default = function _default(string) {\n  var arr = [];\n\n  var _iterator = _createForOfIteratorHelper(string),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var char = _step.value;\n      arr.push(char);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return arr;\n};\n\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":14,"column":15},"source":"js/utils/split.js","original":{"line":1,"column":15}},{"name":"string","generated":{"line":14,"column":33},"source":"js/utils/split.js","original":{"line":1,"column":16}},{"generated":{"line":14,"column":39},"source":"js/utils/split.js","original":{"line":1,"column":15}},{"generated":{"line":14,"column":41},"source":"js/utils/split.js","original":{"line":1,"column":27}},{"generated":{"line":15,"column":0},"source":"js/utils/split.js","original":{"line":2,"column":2}},{"name":"arr","generated":{"line":15,"column":6},"source":"js/utils/split.js","original":{"line":2,"column":8}},{"generated":{"line":15,"column":9},"source":"js/utils/split.js","original":{"line":2,"column":11}},{"generated":{"line":15,"column":12},"source":"js/utils/split.js","original":{"line":2,"column":14}},{"generated":{"line":15,"column":14},"source":"js/utils/split.js","original":{"line":2,"column":2}},{"generated":{"line":17,"column":0},"source":"js/utils/split.js","original":{"line":1,"column":27}},{"name":"string","generated":{"line":17,"column":45},"source":"js/utils/split.js","original":{"line":3,"column":21}},{"generated":{"line":17,"column":51},"source":"js/utils/split.js","original":{"line":1,"column":27}},{"generated":{"line":18,"column":0},"source":"js/utils/split.js","original":{"line":1,"column":27}},{"generated":{"line":20,"column":0},"source":"js/utils/split.js","original":{"line":1,"column":27}},{"generated":{"line":21,"column":0},"source":"js/utils/split.js","original":{"line":3,"column":2}},{"generated":{"line":22,"column":0},"source":"js/utils/split.js","original":{"line":3,"column":2}},{"name":"char","generated":{"line":22,"column":10},"source":"js/utils/split.js","original":{"line":3,"column":13}},{"generated":{"line":22,"column":14},"source":"js/utils/split.js","original":{"line":3,"column":2}},{"name":"arr","generated":{"line":23,"column":0},"source":"js/utils/split.js","original":{"line":3,"column":29}},{"name":"arr","generated":{"line":23,"column":6},"source":"js/utils/split.js","original":{"line":3,"column":29}},{"generated":{"line":23,"column":9},"source":"js/utils/split.js","original":{"line":3,"column":32}},{"name":"push","generated":{"line":23,"column":10},"source":"js/utils/split.js","original":{"line":3,"column":33}},{"generated":{"line":23,"column":14},"source":"js/utils/split.js","original":{"line":3,"column":29}},{"name":"char","generated":{"line":23,"column":15},"source":"js/utils/split.js","original":{"line":3,"column":38}},{"generated":{"line":23,"column":19},"source":"js/utils/split.js","original":{"line":3,"column":29}},{"generated":{"line":24,"column":0},"source":"js/utils/split.js","original":{"line":3,"column":2}},{"generated":{"line":25,"column":0},"source":"js/utils/split.js","original":{"line":1,"column":27}},{"generated":{"line":26,"column":0},"source":"js/utils/split.js","original":{"line":1,"column":27}},{"generated":{"line":27,"column":0},"source":"js/utils/split.js","original":{"line":1,"column":27}},{"generated":{"line":28,"column":0},"source":"js/utils/split.js","original":{"line":1,"column":27}},{"generated":{"line":29,"column":0},"source":"js/utils/split.js","original":{"line":1,"column":27}},{"generated":{"line":31,"column":0},"source":"js/utils/split.js","original":{"line":5,"column":2}},{"name":"arr","generated":{"line":31,"column":9},"source":"js/utils/split.js","original":{"line":5,"column":9}},{"generated":{"line":31,"column":12},"source":"js/utils/split.js","original":{"line":5,"column":2}},{"generated":{"line":32,"column":0},"source":"js/utils/split.js","original":{"line":6,"column":1}}],"sources":{"js/utils/split.js":"export default (string) => {\r\n  const arr = [];\r\n  for (const char of string) arr.push(char);\r\n\r\n  return arr;\r\n};\r\n"},"lineCount":null}},"error":null,"hash":"8715668a163a7592b6bc79bd43058ef4","cacheData":{"env":{}}}