{"version":3,"sources":["js/constants.js","js/utils/getNotValidInputIndexes.js","js/utils/split.js","js/resolveEquations.js","js/utils/safeBackspace.js","js/index.js"],"names":["MAX_EXPRESSIONS_COUNT","ERROR_DELAY_MS","EMOJIS","EMOJI_REG_EXP","validateInputValue","value","formattedValue","replace","regExp","test","inputValues","notValidInputsIndexes","forEach","index","push","string","arr","char","equations","emojiValues","Object","fromEntries","map","emoji","undefined","total","equation","split","expression","result","calculateExpression","console","log","expressionValues","minus","startsWith","slice","join","unknownValues","parseFloat","filter","uniqueEmojis","Set","match","size","multiplier","controls","document","getElementById","form","newExpressionButton","errorMessage","currentInput","resultContainer","addNewInput","newInput","createElement","setAttribute","classList","add","append","resetForm","innerHTML","removeAttribute","addEventListener","target","childElementCount","setFieldErrors","indexes","Array","from","children","input","includes","setTimeout","remove","showErrorMessage","id","contains","e","preventDefault","notValidInputIndexes","length","formattedValues","entries","resultItem"],"mappings":"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","file":"js.00a46daa.js","sourceRoot":"..\\src","sourcesContent":["const MAX_EXPRESSIONS_COUNT = 6;\r\nconst ERROR_DELAY_MS = 3000;\r\nconst EMOJIS = ['🐴', '🐯', '🦁', '🦝', '🐗'];\r\nconst EMOJI_REG_EXP =\r\n  /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/gi;\r\n\r\nexport { MAX_EXPRESSIONS_COUNT, ERROR_DELAY_MS, EMOJIS, EMOJI_REG_EXP };\r\n","import { EMOJIS, EMOJI_REG_EXP } from '../constants';\r\n\r\nconst validateInputValue = (value) => {\r\n  const formattedValue = value.replace(EMOJI_REG_EXP, '0');\r\n  const regExp = /^\\-?[0-9]+(([-+/*][0-9]+)?([.,][0-9]+)?)*?=([0-9]+|\\?)$/;\r\n  return regExp.test(formattedValue);\r\n};\r\n\r\nexport default (inputValues) => {\r\n  const notValidInputsIndexes = [];\r\n\r\n  inputValues.forEach((value, index) => {\r\n    if (!validateInputValue(value)) {\r\n      notValidInputsIndexes.push(index);\r\n    }\r\n  });\r\n\r\n  return notValidInputsIndexes;\r\n};\r\n","export default (string) => {\r\n  const arr = [];\r\n  for (const char of string) arr.push(char);\r\n\r\n  return arr;\r\n};\r\n","import split from './utils/split';\r\nimport { EMOJIS, EMOJI_REG_EXP } from './constants';\r\n\r\nexport default (equations) => {\r\n  const emojiValues = Object.fromEntries(\r\n    EMOJIS.map((emoji) => [emoji, undefined])\r\n  );\r\n  let total;\r\n\r\n  equations.forEach((equation) => {\r\n    let [expression, result] = equation.split('=');\r\n\r\n    const calculateExpression = (expression) => {\r\n      console.log(expression);\r\n      const expressionValues = expression.replace(/-/gi, '+-').split('+');\r\n      return expressionValues.map((value) => {\r\n        let minus = '';\r\n        if (value.startsWith('-')) {\r\n          minus = '-';\r\n          value = value.slice(1);\r\n        }\r\n        if (emojiValues[value]) {\r\n          value = emojiValues[value];\r\n        }\r\n        console.log(value);\r\n        if (EMOJI_REG_EXP.test(value)) {\r\n          return split(value)\r\n            .map((char) => `${minus}${char}`)\r\n            .join('+');\r\n        }\r\n        return `${minus}${value}`;\r\n      });\r\n    };\r\n\r\n    const expressionValues = calculateExpression(expression);\r\n    const unknownValues = expressionValues\r\n      .map((value) => {\r\n        if (emojiValues[value]) {\r\n          value = emojiValues[value];\r\n        }\r\n        if (/^[0-9-]*$/.test(value) && result !== '?') {\r\n          result = parseFloat(result);\r\n          result -= parseFloat(value);\r\n          return null;\r\n        }\r\n        return value;\r\n      })\r\n      .filter((value) => !!value)\r\n      .join('+');\r\n\r\n    const uniqueEmojis = new Set(unknownValues.match(EMOJI_REG_EXP));\r\n    if (uniqueEmojis.size === 1) {\r\n      let multiplier = 0;\r\n      unknownValues.split('+').forEach((value) => {\r\n        if (value.startsWith('-')) {\r\n          multiplier--;\r\n        } else {\r\n          multiplier++;\r\n        }\r\n      });\r\n      emojiValues[[...uniqueEmojis][0]] = result / multiplier;\r\n    }\r\n\r\n    if (result === '?') {\r\n      total = calculateExpression(expression)[0];\r\n    }\r\n  });\r\n\r\n  return { total, emojiValues };\r\n};\r\n","import split from './split';\r\n\r\nexport default (string) => {\r\n  const arr = split(string);\r\n\r\n  return arr.slice(0, -1).join('');\r\n};\r\n","import { MAX_EXPRESSIONS_COUNT, ERROR_DELAY_MS } from './constants';\r\nimport getNotValidInputIndexes from './utils/getNotValidInputIndexes';\r\nimport resolveEquations from './resolveEquations';\r\nimport safeBackspace from './utils/safeBackspace';\r\n\r\nconst controls = document.getElementById('controls');\r\nconst form = document.getElementById('calculator-form');\r\nconst newExpressionButton = document.getElementById('new-expression');\r\nconst errorMessage = document.getElementById('error-message');\r\nlet currentInput = document.getElementById('initial-input');\r\nconst resultContainer = document.getElementById('result-container');\r\n\r\nconst addNewInput = () => {\r\n  const newInput = document.createElement('input');\r\n  newInput.setAttribute('readonly', true);\r\n  newInput.classList.add('input');\r\n  form.append(newInput);\r\n  currentInput = newInput;\r\n};\r\n\r\nconst resetForm = () => {\r\n  form.innerHTML = '';\r\n  newExpressionButton.removeAttribute('disabled');\r\n  addNewInput();\r\n};\r\n\r\nnewExpressionButton.addEventListener('click', ({ target }) => {\r\n  addNewInput();\r\n\r\n  if (form.childElementCount === MAX_EXPRESSIONS_COUNT) {\r\n    target.setAttribute('disabled', true);\r\n  }\r\n});\r\n\r\nconst setFieldErrors = (indexes) => {\r\n  Array.from(form.children).forEach((input, index) => {\r\n    if (indexes.includes(index)) {\r\n      input.classList.add('error');\r\n      setTimeout(() => {\r\n        input.classList.remove('error');\r\n      }, ERROR_DELAY_MS);\r\n    } else {\r\n      input.classList.remove('error');\r\n    }\r\n  });\r\n};\r\n\r\nconst showErrorMessage = () => {\r\n  errorMessage.innerHTML = 'Please enter valid expressions!';\r\n  setTimeout(() => {\r\n    errorMessage.innerHTML = '';\r\n  }, ERROR_DELAY_MS);\r\n};\r\n\r\ncontrols.addEventListener('click', ({ target }) => {\r\n  if (target.id === 'backspace') {\r\n    currentInput.value = safeBackspace(currentInput.value);\r\n  }\r\n\r\n  if (!target.classList.contains('calculator-button')) return;\r\n\r\n  currentInput.value += target.innerHTML;\r\n});\r\n\r\nform.addEventListener('click', ({ target }) => {\r\n  if (!target.classList.contains('input')) return;\r\n\r\n  currentInput = target;\r\n});\r\n\r\nform.addEventListener('reset', (e) => {\r\n  e.preventDefault();\r\n  resetForm();\r\n});\r\n\r\nform.addEventListener('submit', (e) => {\r\n  e.preventDefault();\r\n  const inputValues = Array.from(e.target.children).map(({ value }) => value);\r\n  const notValidInputIndexes = getNotValidInputIndexes(inputValues);\r\n  setFieldErrors(notValidInputIndexes);\r\n\r\n  if (notValidInputIndexes.length > 0) {\r\n    showErrorMessage();\r\n    return;\r\n  }\r\n  errorMessage.innerHTML = '';\r\n  const result = resolveEquations(inputValues);\r\n  const { total, emojiValues } = result;\r\n  const formattedValues = Object.entries(emojiValues).map(([emoji, value]) => {\r\n    const formattedValue = typeof value === 'number' ? value :'?';\r\n    return `${emoji} = ${formattedValue}`;\r\n  });\r\n  resultContainer.innerHTML = `Result: ${total}`;\r\n  formattedValues.forEach(value => {\r\n    const resultItem = document.createElement('p');\r\n    resultItem.innerHTML = value;\r\n    resultContainer.append(resultItem);\r\n  })\r\n});\r\n"]}